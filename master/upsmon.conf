# Network UPS Tools: Master upsmon.conf
# verson 1.0
#
# ============================================================================
# Original: https://github.com/networkupstools/nut/blob/master/conf/upsmon.conf.sample.in
# ============================================================================

# By default, upsmon splits into two processes. One stays as root and
# waits to run the SHUTDOWNCMD. The other one switches to another userid
# and does everything else.

RUN_AS_USER root

# --------------------------------------------------------------------------

# List systems you want to monitor.  Not all of these may supply power
# to the system running upsmon, but if you want to watch it, it has to
# be in this section.
#
# The general form is: 
# MONITOR <system> <powervalue> <username> <password> "master"/"slave""
#
# system: UPS identifier in the form <upsname>@<hostname>[:<port>]
#   The UPS names like "ups01" are set in your ups.conf in [brackets] 
#   which identify a section for a particular driver.
#
# powervalue: an integer - the number of power supplies that this UPS
#   feeds on this system.  Most personal computers only have one power supply,
#   so this value is normally set to 1, while most modern servers have at least
#   two. You can also set this to 0 for a system that doesn't take any power
#   from the MONITORed supply, which you still want to monitor. Use 0 when you 
#   want to hear about changes for a given UPS without shutting.
#
# username and password: must match an entry in that system's
#   upsd.users.
#
# master: means this system will shutdown last, allowing the slaves
#   time to shutdown first.
#
# slave: means this system shuts down immediately when power goes critical.

MONITOR UPS-ES-07@localhost 0 upsmaster <masterpassword> master

# --------------------------------------------------------------------------

# Give the number of power supplies that must be receiving power to keep
# this system running.  Most systems have one power supply, so you would
# put "1" in this field. Server type systems usually have more, and can run with
# a few missing.  The HP NetServer LH4 can run with 2 out of 4, for example,
# so you'd set that to 2.  

MINSUPPLIES 0

# --------------------------------------------------------------------------

# upsmon runs this command when the system needs to be brought down.

# NOTE: The path may change, according to OS

SHUTDOWNCMD "/sbin/shutdown -h +0"

# --------------------------------------------------------------------------

# upsmon calls this to send messages when things happen
# This command is called with the full text of the message as one argument.
# The environment string NOTIFYTYPE will contain the type string of
# whatever caused this event to happen.
# Note that this is only called for NOTIFY events that have EXEC set with
# NOTIFYFLAG.  See NOTIFYFLAG below for more details.
# Making this some sort of shell script might not be a bad idea.  For more
# information and ideas, see docs/scheduling.txt

# NOTE: The path may change, according to OS

NOTIFYCMD "/sbin/upssched"

# --------------------------------------------------------------------------

# Polling frequency of monitors for normal activities, measured in seconds.
# for a local unit 1-2 second is fine, for network 5-10 should be ok.

POLLFREQ 10

# --------------------------------------------------------------------------

# Polling frequency of monitors while UPS on battery, measured in seconds.

POLLFREQALERT 5

# --------------------------------------------------------------------------

# How long upsmon will wait before giving up on another upsmon.
# The master upsmon process uses this number when waiting for slaves to
# disconnect once it has set the forced shutdown (FSD) flag.  If they
# don't disconnect after this many seconds, it goes on without them.
# A slave upsmon processes will wait up to this interval for the
# master upsmon to set FSD when a UPS they are monitoring goes critical. 
# If the master doesn't do its job, the slaves will shut down anyway.

HOSTSYNC 15

# --------------------------------------------------------------------------

# Interval to wait before declaring a stale ups "dead"
# A dead UPS that was last known to be on battery is assumed to have gone
# to a low battery condition.  This may force a shutdown if it is providing
# a critical amount of power to your system.
#
# DEADTIME should be a multiple of POLLFREQ and POLLFREQALERT.
# Otherwise you'll have "dead" UPSes simply because upsmon isn't polling
# them quickly enough.  Rule of thumb: take the larger of the two
# POLLFREQ values, and multiply by 3.

DEADTIME 50 

# --------------------------------------------------------------------------

# Flag file for forcing UPS shutdown on the master system
# upsmon will create a file with this name in master mode when it's time
# to shut down the load.  You should check for this file's existence in
# your shutdown scripts and run 'upsdrvctl shutdown' if it exists.

POWERDOWNFLAG /etc/killpower

# --------------------------------------------------------------------------

# Messages sent by upsmon when certain events occur
# format of the massages that the monitor can send to wall, syslog or script 
# Note that %s is replaced with the identifier of the UPS in question.

NOTIFYMSG ONLINE	"UPS %s on line power"
NOTIFYMSG ONBATT	"UPS %s on battery"
NOTIFYMSG LOWBATT	"UPS %s battery is low"
NOTIFYMSG FSD		"UPS %s: forced shutdown in progress"
NOTIFYMSG COMMOK	"Communications with UPS %s established"
NOTIFYMSG COMMBAD	"Communications with UPS %s lost"
NOTIFYMSG SHUTDOWN	"Auto logout and shutdown proceeding"
NOTIFYMSG REPLBATT	"UPS %s battery needs to be replaced"
NOTIFYMSG NOCOMM	"UPS %s is unavailable"
NOTIFYMSG NOPARENT	"upsmon parent process died - shutdown impossible"

# --------------------------------------------------------------------------

# Behavior of upsmon when NOTIFY events occur  
#   SYSLOG - Write the message in the syslog
#   WALL   - Write the message to all users on the system
#   EXEC   - Execute NOTIFYCMD (see above) with the message
#   IGNORE - Don't do anything. Wont use any other flags on the same line.

NOTIFYFLAG ONLINE	SYSLOG+WALL+EXEC
NOTIFYFLAG ONBATT	SYSLOG+WALL+EXEC
NOTIFYFLAG LOWBATT	SYSLOG+WALL
NOTIFYFLAG FSD		SYSLOG+WALL+EXEC
NOTIFYFLAG COMMOK	SYSLOG+WALL+EXEC
NOTIFYFLAG COMMBAD	SYSLOG+WALL+EXEC
NOTIFYFLAG SHUTDOWN	SYSLOG+WALL+EXEC
NOTIFYFLAG REPLBATT	SYSLOG+WALL+EXEC
NOTIFYFLAG NOCOMM	SYSLOG+WALL+EXEC
NOTIFYFLAG NOPARENT	SYSLOG+WALL

# --------------------------------------------------------------------------

# upsmon will normally warn you about a battery that needs to be replaced
# every 43200 seconds, which is 12 hours.  It does this by triggering a
# NOTIFY_REPLBATT which is then handled by the usual notify structure
# defined above.

RBWARNTIME 43200

# --------------------------------------------------------------------------

# upsmon will let you know through the usual notify system defined above if it
# can't talk to any of the UPS entries that are defined in this file.  It will
# trigger a NOTIFY_NOCOMM by default every 300 seconds unless you
# change the interval with this directive.

NOCOMMWARNTIME 600

# --------------------------------------------------------------------------

# last delay interval before shutting down the system
# On a master, upsmon will wait this long after sending the NOTIFY_SHUTDOWN
# before executing your SHUTDOWNCMD.  If you need to do something in between
# those events, increase this number.
# Note: If FINALDELAY on the slave is greater than HOSTSYNC on the master,
# the master will give up waiting for the slave to disconnect.

FINALDELAY 5
